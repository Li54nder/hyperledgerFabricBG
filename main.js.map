{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/pages/auth/auth-interceptor.service.ts","./src/app/pages/auth/auth.component.ts","./src/app/pages/auth/auth.component.html","./src/app/pages/auth/auth.guard.ts","./src/app/pages/auth/auth.service.ts","./src/app/pages/auth/user.module.ts","./src/app/pages/byfn/byfn.component.ts","./src/app/pages/byfn/byfn.component.html","./src/app/pages/glossary/glossary.component.ts","./src/app/pages/glossary/glossary.component.html","./src/app/pages/guide/guide.component.ts","./src/app/pages/guide/guide.component.html","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/pages/qna/qna.component.ts","./src/app/pages/qna/qna.component.html","./src/app/shared/data-storage.service.ts","./src/app/shared/loading-spinner/loading-spinner.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './pages/auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  dispalyFooter = true;\n  title = 'HyperledgerFabricBGCS';\n\n  constructor(private router: Router, private authService: AuthService) {\n    router.events.subscribe(() => {\n      this.dispalyFooter = router.url !== '/auth';\n    });\n  }\n\n  ngOnInit() {\n    this.authService.autoLogin();\n  }\n}\n","<div id=\"navbar\">\n  <app-navbar></app-navbar>\n</div>\n<div id=\"page-content\">\n  <router-outlet></router-outlet>\n</div>\n<div id=\"footer\" *ngIf=\"dispalyFooter\">\n  <app-footer></app-footer>\n</div>\n","import { NgModule } from '@angular/core';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthGuard } from './pages/auth/auth.guard';\n\nimport { AppComponent } from './app.component';\n\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { BYFNComponent } from './pages/byfn/byfn.component';\nimport { GuideComponent } from './pages/guide/guide.component';\nimport { QNAComponent } from './pages/qna/qna.component';\nimport { AuthComponent } from './pages/auth/auth.component';\nimport { GlossaryComponent, SearchPipe } from './pages/glossary/glossary.component'\nimport { LoadingSpinnerComponent } from './shared/loading-spinner/loading-spinner.component';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { AuthInterceptorSrvice } from './pages/auth/auth-interceptor.service';\nimport { AsyncPipe } from '@angular/common';\n\nconst appRoutes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'byfn', component: BYFNComponent },\n  { path: 'guide', component: GuideComponent },\n  { path: 'q-and-a', component: QNAComponent, canActivate: [AuthGuard] },\n  { path: 'auth', component: AuthComponent},\n  { path: 'glossary', component: GlossaryComponent}\n];\n\n@NgModule({\n  declarations: [\n    SearchPipe,\n    \n    AppComponent,\n    NavbarComponent,\n    FooterComponent,\n    BYFNComponent,\n    GuideComponent,\n    HomeComponent,\n    QNAComponent,\n    AuthComponent,\n    LoadingSpinnerComponent,\n    GlossaryComponent,\n  ],\n  exports: [\n    SearchPipe\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes),\n\n    MatButtonModule,\n    MatStepperModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatExpansionModule,\n    MatCardModule,\n    MatTooltipModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptorSrvice,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css'],\n})\nexport class FooterComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div id=\"footer\">\n  <div class=\"column\">\n    <div class=\"row\">\n      <div id=\"num1\">\n        <img\n          src=\"assets/img/logo-orange.png\"\n          alt=\"Hyperledger | Fabric | Logo\"\n        />\n      </div>\n      <div id=\"num2\">\n        <p>\n          The Linux Foundation founded the Hyperledger in 2015 to advance\n          cross-industry blockchain technologies. Hyperledger Fabric is one of\n          the blockchain projects within Hyperledger!\n        </p>\n        <p>Guide is adapted for Linux users</p>\n      </div>\n      <div id=\"num3\">\n        <p>Source is official Hyperledger Fabric documentation!</p>\n        <a href=\"https://hyperledger-fabric.readthedocs.io/\" target=\"blank\"\n          ><button mat-raised-button>Go To Documentation</button></a\n        >\n      </div>\n    </div>\n    <div class=\"row orange\">\n      <p>\n        <a href=\"https://Li54nder.github.io/personal\" target=\"blank\"\n          >Copyright © 2020 Aleksa Novkovic</a\n        >\n      </p>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../pages/auth/auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n})\nexport class NavbarComponent implements OnInit, OnDestroy {\n  isAuth = false;\n  private userSubscription: Subscription;\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.userSubscription = this.authService.user.subscribe((user) => {\n      this.isAuth = !!user;\n    });\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n\n  scrollToTop() {\n    window.scrollTo(0, 0);\n  }\n\n  ngOnDestroy(): void {\n    this.userSubscription.unsubscribe();\n  }\n}\n","<nav id=\"navbar\">\n  <button mat-button routerLink=\"/\" (click)=\"scrollToTop()\">\n    Hyperledger Fabric Beginner's Guide\n  </button>\n  <div id=\"nav\">\n    <button\n      mat-button\n      routerLink=\"/byfn\"\n      routerLinkActive=\"active\"\n      (click)=\"scrollToTop()\"\n    >\n      BYFN\n    </button>\n    <button\n      mat-button\n      routerLink=\"/guide\"\n      routerLinkActive=\"active\"\n      (click)=\"scrollToTop()\"\n    >\n      Guide\n    </button>\n    <button\n      mat-button\n      routerLink=\"/q-and-a\"\n      routerLinkActive=\"active\"\n      (click)=\"scrollToTop()\"\n    >\n      Q&A\n    </button>\n    <button mat-button *ngIf=\"isAuth\" (click)=\"onLogout()\">Logout</button>\n  </div>\n</nav>\n","import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpParams,\n} from '@angular/common/http';\nimport { AuthService } from './auth.service';\nimport { take, exhaustMap } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthInterceptorSrvice implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  //EXHAUSTMAP - ceka da se prvi obzrvabl zavrsi pa onda krece sa sledecim\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    return this.authService.user.pipe(\n      take(1),\n      exhaustMap((user) => {\n        if (!user) {\n          return next.handle(req);\n        } else {\n          const modifiedReq = req.clone({\n            params: new HttpParams().set('auth', user.token),\n          });\n          return next.handle(modifiedReq);\n        }\n      })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from './auth.service';\nimport { Observable } from 'rxjs';\nimport { ResponseData } from './auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css'],\n})\nexport class AuthComponent implements OnInit {\n  isLoginMode = true;\n  isLoading = false;\n  error: string = null;\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit(): void {}\n\n  onSwitchMode() {\n    this.isLoginMode = !this.isLoginMode;\n  }\n\n  onSubmitForm(form: NgForm) {\n    let authObs: Observable<ResponseData>;\n\n    if (!form.valid) {\n      return;\n    }\n    const email = form.value.email;\n    const password = form.value.password;\n\n    this.isLoading = true;\n\n    if (this.isLoginMode) {\n      authObs = this.authService.login(email, password);\n    } else {\n      authObs = this.authService.signup(email, password);\n    }\n    authObs.subscribe(\n      (resData) => {\n        this.isLoading = false;\n        this.router.navigate(['/q-and-a']);\n        // form.reset()\n      },\n      (error) => {\n        if (error.error && error.error.error) {\n          switch (error.error.error.message) {\n            case 'EMAIL_EXISTS':\n              this.error = 'This email already exists.';\n              break;\n            case 'EMAIL_NOT_FOUND':\n              this.error = 'Account with this email not found.';\n              break;\n            case 'INVALID_PASSWORD':\n              this.error = 'Password you entered is invalid.';\n              break;\n            default:\n              this.error = 'An unknown error occured.';\n              break;\n          }\n        }\n        this.isLoading = false;\n      }\n    );\n  }\n}\n","<div class=\"page-content\">\n  <div class=\"text\">\n    <h2>\n      {{\n        isLoginMode ? \"For this action you must be logged in!\" : \"Registration\"\n      }}\n    </h2>\n    <br />\n    <div *ngIf=\"isLoading\">\n      <app-loading-spinner></app-loading-spinner>\n    </div>\n    <div *ngIf=\"error && !isLoading\">\n      <mat-card>\n        <mat-card-title>Error!</mat-card-title>\n        <mat-card-content>{{ error }}</mat-card-content>\n      </mat-card>\n      <br />\n    </div>\n    <form\n      autocomplete=\"off\"\n      #authForm=\"ngForm\"\n      (ngSubmit)=\"onSubmitForm(authForm)\"\n      *ngIf=\"!isLoading\"\n    >\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Email</mat-label>\n        <input\n          matInput\n          type=\"email\"\n          ngModel\n          required\n          email\n          placeholder=\"E.g. example@email.com\"\n          name=\"email\"\n        />\n      </mat-form-field>\n\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Password</mat-label>\n        <input\n          matInput\n          type=\"password\"\n          ngModel\n          required\n          password\n          placeholder=\"*******\"\n          name=\"password\"\n        />\n      </mat-form-field>\n\n      <br />\n      <div class=\"buttons\">\n        <button mat-raised-button type=\"submit\" [disabled]=\"!authForm.valid\">\n          {{ isLoginMode ? \"Login\" : \"Sing Up\" }}\n        </button>\n        <br /><br />\n        <button mat-raised-button (click)=\"onSwitchMode()\" type=\"button\">\n          {{\n            isLoginMode\n              ? \"You haven't account yet - let's REGISTRATE\"\n              : \"Switch to Login\"\n          }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { map, take } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    router: RouterStateSnapshot\n  ):\n    | boolean\n    | UrlTree\n    | Promise<boolean | UrlTree>\n    | Observable<boolean | UrlTree> {\n    return this.authService.user.pipe(\n      take(1),\n      map((user) => {\n        const isAuth = !!user;\n        if (isAuth) {\n          return true;\n        }\n        return this.router.createUrlTree(['/auth']);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { User } from './user.module';\nimport { Router } from '@angular/router';\n\nexport interface ResponseData {\n  kind: string;\n  idToken: string;\n  email: string;\n  refreshToken: string;\n  expiresIn: string;\n  localId: string;\n  registred?: boolean;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  user = new BehaviorSubject<User>(null);\n  private tokenExpirationTimer: any;\n  private tokenExpirationAlert: any;\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  signup(email: string, password: string) {\n    return this.http\n      .post<ResponseData>(\n        'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyD49_K6-hYtJBMArAnwiYHJLPbiUuKv5Yk',\n        {\n          email: email,\n          password: password,\n          returnSecureToken: true,\n        }\n      )\n      .pipe(\n        tap((resData) =>\n          this.handleAuth(\n            resData.email,\n            resData.localId,\n            resData.idToken,\n            +resData.expiresIn\n          )\n        )\n      );\n  }\n\n  login(email: string, password: string) {\n    return this.http\n      .post<ResponseData>(\n        'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyD49_K6-hYtJBMArAnwiYHJLPbiUuKv5Yk',\n        {\n          email: email,\n          password: password,\n          returnSecureToken: true,\n        }\n      )\n      .pipe(\n        tap((resData) => {\n          this.handleAuth(\n            resData.email,\n            resData.localId,\n            resData.idToken,\n            +resData.expiresIn\n          );\n        })\n      );\n  }\n\n  autoLogin() {\n    const userData: {\n      email: string;\n      id: string;\n      _token: string;\n      _tokenExpirationTimestamp: string;\n    } = JSON.parse(localStorage.getItem('userData'));\n\n    if (!userData) {\n      return;\n    }\n\n    const loadedUser = new User(\n      userData.email,\n      userData.id,\n      userData._token,\n      +userData._tokenExpirationTimestamp\n    );\n\n    this.user.next(loadedUser);\n    if (loadedUser.token) {\n      this.user.next(loadedUser);\n      this.autoLogout(\n        +userData._tokenExpirationTimestamp - new Date().getTime()\n      );\n    }\n  }\n\n  logout() {\n    this.user.next(null);\n    this.router.navigate(['/']);\n    localStorage.removeItem('userData');\n    if (this.tokenExpirationTimer) {\n      clearTimeout(this.tokenExpirationTimer);\n    }\n    if (this.tokenExpirationAlert) {\n      clearTimeout(this.tokenExpirationAlert);\n    }\n  }\n\n  autoLogout(expirationDuration: number) {\n    this.tokenExpirationTimer = setTimeout(() => {\n      this.logout();\n    }, expirationDuration);\n    this.tokenExpirationAlert = setTimeout(() => {\n      alert(\"Your session expires in 5 seconds, you will be automatically logged out.\")\n    }, expirationDuration - 5000)\n  }\n\n  private handleAuth(\n    email: string,\n    userId: string,\n    token: string,\n    expiresIn: number\n  ) {\n    const expData = new Date(new Date().getTime() + +expiresIn * 1000);\n    const user = new User(email, userId, token, expData.getTime());\n\n    this.user.next(user);\n    this.autoLogout(expiresIn * 1000);\n    localStorage.setItem('userData', JSON.stringify(user));\n  }\n}\n","export class User {\n  constructor(\n    public email: string,\n    public id: string,\n    private _token: string,\n    private _tokenExpirationTimestamp: number\n  ) {}\n\n  get token() {\n    if (\n      !this._tokenExpirationTimestamp ||\n      new Date().getTime() > this._tokenExpirationTimestamp\n    ) {\n      return null;\n    }\n    return this._token;\n  }\n\n  get expiration() {\n    return this._tokenExpirationTimestamp;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-byfn',\n  templateUrl: './byfn.component.html',\n  styleUrls: ['./byfn.component.css'],\n})\nexport class BYFNComponent implements OnInit {\n  constructor(private snackBar: MatSnackBar, private router: Router) {}\n\n  ngOnInit(): void {}\n\n  openSnackBar(message, action) {\n    this.snackBar.open(message, action, { duration: 4000 });\n  }\n  \n  navigateToGuide() {\n    this.router.navigate(['/guide']);\n    window.scrollTo(0, 0);\n  }\n}\n","<div class=\"page-content\">\n  <div class=\"text\">\n    <h1>Build Your First Netrwork</h1>\n    <p>\n      Firstly take a look at <strong>the guide</strong> for Prerequisites &\n      Samples etc.\n    </p>\n    <div class=\"buttons\">\n      <button mat-raised-button (click)=\"navigateToGuide()\">Open Guide</button>\n      <button\n        mat-raised-button\n        (click)=\"\n          openSnackBar(\n            'Everything on these pages are adapted to Hyperledger Fabric v1.4',\n            'OK'\n          )\n        \"\n      >\n        Note*\n      </button>\n    </div>\n  </div>\n  <div class=\"text\">\n    <p>Now, when you did it, go open terminal and navigate to this path:</p>\n    <div class=\"code\">.../fabric-samples/first-network$</div>\n    <br /><br />\n    <p>Then, go follow these steps:</p>\n\n    <div class=\"code\">\n      <mat-vertical-stepper #stepper>\n        <mat-step label=\"Generating Network\" completed=\"false\" optional>\n          $ ./byfn.sh generate\n        </mat-step>\n        <mat-step label=\"Setup Docker\" completed=\"false\" optional>\n          $ sudo groupadd docker\n          <br />\n          $ sudo usermod -aG docker $USER\n          <br />\n          $ newgrp docker\n          <br />\n          $ docker run hello-world\n        </mat-step>\n        <mat-step label=\"Up/Down Network\" completed=\"false\" optional>\n          $ ./byfn.sh up\n          <br />\n          $ ./byfn.sh down\n          <br /><br />\n          <button\n            id=\"smallNote\"\n            mat-raised-button\n            (click)=\"\n              openSnackBar(\n                'You can use flag -l behind UP command for specified language (e.g. -l node), also there is flag to specified ordering service (e.g. -o kafka)',\n                'OK'\n              )\n            \"\n          >\n            Note*\n          </button>\n        </mat-step>\n      </mat-vertical-stepper>\n    </div>\n  </div>\n  <div class=\"text\">\n    <p>\n      After all, if you come to some error with message, while you running\n      <strong>UP</strong> command, like this one:\n      <br />\n      <em\n        >\"FORBIDDEN --config update for existing channel did not pass initial\n        checks...\"</em\n      >\n      <br />\n      Then follow these steps below to turn off all docker containers:\n    </p>\n    <div class=\"buttons\">\n      <button\n        mat-raised-button\n        (click)=\"\n          openSnackBar('Pay attention to the default answers (Yes/No)', 'OK')\n        \"\n      >\n        Note*\n      </button>\n    </div>\n    <div class=\"code align-left\">\n      $ docker stop $(docker ps -a -q)\n      <br />\n      $ docker rm $(docker ps -a -q)\n      <br />\n      $ docker system prune -a\n      <br />\n      $ docker volume prune\n      <br />\n      $ docker network prune\n    </div>\n  </div>\n  <div class=\"text\">\n    <p>You can find a full guide for BYFN on official documentation</p>\n    <a\n      href=\"https://hyperledger-fabric.readthedocs.io/en/release-1.4/build_network.html\"\n      target=\"blank\"\n    >\n      <button mat-raised-button>Go Check Doc</button>\n    </a>\n  </div>\n</div>\n","import { Component, OnInit, Pipe, PipeTransform } from '@angular/core';\nimport { DataStorageService } from 'src/app/shared/data-storage.service';\nimport { tap, map, filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-glossary',\n  templateUrl: './glossary.component.html',\n  styleUrls: ['./glossary.component.css'],\n})\nexport class GlossaryComponent implements OnInit {\n  public glossary: { therm: string; definition: string }[];\n  public query;\n\n  constructor(private dataStorage: DataStorageService) {}\n\n  ngOnInit(): void {\n    this.dataStorage.fetchGlossary().subscribe((res) => {\n      res = res.filter((item) => item !== null);\n      res.sort((a, b) => {\n        return a.therm < b.therm ? -1 : 1;\n      });\n      this.glossary = res;\n    });\n  }\n}\n\n@Pipe({\n  name: 'search',\n})\nexport class SearchPipe implements PipeTransform {\n  public transform(value, keys: string, term: string) {\n    if (!term) return value;\n    return (value || []).filter((item) =>\n      keys\n        .split(', ')\n        .some(\n          (key) =>\n            item.hasOwnProperty(key) && new RegExp(term, 'gi').test(item[key])\n        )\n    );\n  }\n}\n","<div class=\"page-content\">\n  <div class=\"text\">\n    <h1>Glossary</h1>\n    <p>\n      Here where you can find some important terms you must know before starting\n      your Hyperledger Fabric journey.\n    </p>\n  </div>\n\n  <div class=\"text\">\n    <form id=\"search\" autocomplete=\"off\">\n      <mat-form-field>\n        <mat-label>Search our dictionary</mat-label>\n        <input type=\"text\" matInput [(ngModel)]=\"query\" name=\"query\" />\n      </mat-form-field>\n    </form>\n    <br /><br />\n    <div\n      class=\"item\"\n      *ngFor=\"let item of glossary | search: 'therm, definition':query\"\n    >\n      <h3>{{ item.therm }}</h3>\n      <p>{{ item.definition }}</p>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-guide',\n  templateUrl: './guide.component.html',\n  styleUrls: ['./guide.component.css'],\n})\nexport class GuideComponent implements OnInit {\n  constructor(private router: Router, private snackBar: MatSnackBar) {}\n\n  ngOnInit(): void {}\n\n  openSnackBar(message, action) {\n    this.snackBar.open(message, action, { duration: 4000 });\n  }\n\n  goToGlossary() {\n    this.router.navigate(['/glossary']);\n    window.scrollTo(0, 0);\n  }\n}\n","<div class=\"page-content\">\n  <div class=\"text\">\n    <h1>The Beginner's Guide</h1>\n    <p>\n      Here are, less or more, everything you have to know about Hyperledger\n      Fabric as a beginner, in brief!\n    </p>\n  </div>\n  <div class=\"text\">\n    <p>\n      Firstly, here you can check if you have installed all prerequisites, as\n      quick as possible:\n    </p>\n    <div class=\"code\">\n      <mat-vertical-stepper #stepper>\n        <mat-step label=\"cURL\" completed=\"false\" optional>\n          $ sudo apt-get install cURL\n        </mat-step>\n        <mat-step label=\"Docker & Docker Compose\" completed=\"false\" optional>\n          $ sudo apt-get install docker\n          <br />\n          $ sudo apt-get install docker-compose\n        </mat-step>\n        <mat-step label=\"Go Lang\" completed=\"false\" optional>\n          $ sudo apt-get install go-lang\n        </mat-step>\n        <mat-step label=\"NodeJS & NPM\" completed=\"false\" optional>\n          $ sudo apt-get install nodejs\n          <br />\n          $ npm install npm@5.6.0 -g\n        </mat-step>\n        <mat-step label=\"Python\" completed=\"false\" optional>\n          $ sudo apt-get install python2\n        </mat-step>\n      </mat-vertical-stepper>\n    </div>\n    <br /><br />\n    <button\n      mat-raised-button\n      (click)=\"\n        openSnackBar(\n          'As you can see, we preper you to Hyperledger Fabric v1.4',\n          'OK'\n        )\n      \"\n    >\n      Note*\n    </button>\n    <br />\n    <p>\n      Now, with these commands bellow you can provide Samples, Binaries and\n      Docker Images you need for BYFN:\n    </p>\n    <div class=\"code\">\n      $ curl -sSL http://bit.ly/2ysbOFE | bash -s -- 1.4.6 1.4.6 0.4.18\n    </div>\n  </div>\n  <div class=\"text\">\n    <p>Then, we strongly recommend that you read our glossary!</p>\n    <button mat-raised-button (click)=\"goToGlossary()\">Go To Glossary</button>\n  </div>\n  <div class=\"text\">\n    <p>\n      After that, you may wish to get acquainted with the Hyperledger Fabric\n      architecture network. Let's check it on the link below.\n    </p>\n    <a\n      href=\"https://hyperledger-fabric.readthedocs.io/en/release-1.4/arch-deep-dive.html\"\n      target=\"_blank\"\n    >\n      <button mat-raised-button>HF Architecture</button>\n    </a>\n    <p>\n      Also we have this photo that might help you understand the architecture\n      itself.\n    </p>\n    <mat-card>\n      <img src=\"assets/img/Architecture.png\" alt=\"\" mat-card-image />\n    </mat-card>\n    <!-- <button mat-raised-button>Show photo</button> -->\n  </div>\n  <div class=\"text\">\n    <p>\n      Furthermore, we suggest you follow the official tutorial of Hyperledger\n      Fabricto write your first application. But before that, it would be nice\n      to read also the official chapter for developing application.\n    </p>\n    <br />\n    <div class=\"buttons\">\n      <a\n        href=\"https://hyperledger-fabric.readthedocs.io/en/release-1.4/developapps/developing_applications.html\"\n        target=\"_blank\"\n      >\n        <button mat-raised-button>Developing Application</button>\n      </a>\n      <a\n        href=\"https://hyperledger-fabric.readthedocs.io/en/release-1.4/write_first_app.html\"\n        target=\"_blank\"\n      >\n        <button mat-raised-button>Write First Application</button>\n      </a>\n    </div>\n  </div>\n  <div class=\"text\">\n    <p>\n      Finally, it's time to choose the language for SDK you will use in your\n      future projects\n    </p>\n    <p>\n      SDK is a replacement for all those commands that we run from the terminal.\n    </p>\n    <p>\n      <strong\n        >So, we wish you good luck in your future work in this field.</strong\n      >\n    </p>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {}\n\n  goToGlossary() {\n    this.router.navigate(['/glossary']);\n    window.scrollTo(0, 0);\n  }\n  \n  navigateToGuide() {\n    this.router.navigate(['/guide']);\n    window.scrollTo(0, 0);\n  }\n}\n","<div class=\"page-content\">\n  <div class=\"text\">\n    <img src=\"assets/img/logo-black.png\" alt=\"Hypeledger | Logo | Fabric\" />\n    <p>\n      Hooray! You are here, so you probably heard something about\n      <strong>blockchain technology</strong> .\n    </p>\n  </div>\n  <div class=\"text\">\n    <p>\n      If you are already familiar with blockchain and Hypeledger Fabric you are\n      likely looking for something like this:\n    </p>\n    <button mat-stroked-button (click)=\"navigateToGuide()\">\n      Hyperledger Fabric Guide</button\n    ><br /><br />\n    <p>\n      But if you are new in this world, then, first of all, you need to read our\n      glossary where you can find some important terms you must know before\n      starting your Hyperledger Fabric journey:\n    </p>\n    <button mat-stroked-button (click)=\"goToGlossary()\">Go To Glossary</button>\n  </div>\n  <div class=\"text\">\n    <h3>Why we need a blockchain?</h3>\n    <br />\n    <p>\n      Well, the members of some business network transact with each other, but\n      they maintain separate records of their transactions. And the things they\n      are transacting must have their provenance established each time they're\n      sold to ensure that the business selling an item possesses a chain of\n      title verifying their ownership of it. Modern technology has taken this\n      process from stone tablets and paper folders to hard drives and cloud\n      platforms, but the underlying structure is the same, you need days to\n      clear securities transactions, contracts must be signed and executed\n      manually and every database in the system contains unique information.\n    </p>\n    <p>\n      However, with blockchain technology we can coordinate their business\n      network through a cost and risk associated with private information and\n      processing while improving trust and visibility.\n    </p>\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { DataStorageService } from 'src/app/shared/data-storage.service';\nimport { AuthService } from '../auth/auth.service';\nimport { Subscription } from 'rxjs';\nimport { NgForm } from '@angular/forms';\nimport { take } from 'rxjs/operators';\nimport { User } from '../auth/user.module';\n\n@Component({\n  selector: 'app-qna',\n  templateUrl: './qna.component.html',\n  styleUrls: ['./qna.component.css'],\n})\nexport class QNAComponent implements OnInit, OnDestroy {\n  userSubscription: Subscription;\n  isAuth: boolean;\n  isLoading: boolean = false;\n  questions: {\n    content: string;\n    subject: string;\n    rate: number;\n    timestamp: number;\n    voters: {\n      down: string[];\n      up: string[];\n    };\n  }[] = new Array();\n  answeredQuestions: any[] = new Array();\n  rating: {sum: number, votes: number, users: {}};\n  private currUser: User;\n\n  constructor(\n    private dataStorage: DataStorageService,\n    private authService: AuthService\n  ) {\n    dataStorage.uQuestions.subscribe(data => {\n      this.questions = data;\n    });\n    // dataStorage.rating.pipe(take(1)).subscribe(data => {\n    //   this.rating = data;\n    //   // this.averageRating = data.average;\n    // })\n  }\n\n  ngOnInit(): void {\n    // this.dataStorage.fetchQuestions().subscribe((res) => {\n    //   this.questions = res;\n    // });\n    this.dataStorage.fetchQuestions();\n\n    this.dataStorage.fetchAnsweredQuestions().subscribe((res) => {\n      this.answeredQuestions = res;\n    });\n\n    this.userSubscription = this.authService.user.subscribe((user) => {\n      this.isAuth = !!user;\n      this.currUser = user;\n    });\n\n    // Better way to fetch data. Subscribe in component!\n    this.dataStorage.fetchRating().subscribe(res => {     \n      this.rating = res; \n      if (res.users[this.currUser.email.replace('.', '-')]) {\n        let x: HTMLElement = document.querySelector('#star_'+res.users[this.currUser.email.replace('.', '-')]);\n        x.click();       \n      }\n    });\n  }\n\n  onSubmitForm(form: NgForm) {\n    if (!form.valid) {\n      return;\n    }\n\n    const subject = form.value.subject;\n    const content = form.value.content;\n\n    this.questions.push({\n      subject: subject,\n      content: content,\n      rate: 0,\n      timestamp: new Date().getTime(),\n      voters: { up: new Array(), down: new Array() },\n    });\n    this.dataStorage.uQuestions.next(this.questions);\n    this.dataStorage.saveQuestions();\n\n    form.reset();\n  }\n\n  upvote(i: number) {\n    this.initVoters(i);\n    if (\n      // If you already voted up then you want to remove your vote... Okay\n      this.questions[i].voters.up &&\n      this.questions[i].voters.up.includes(this.currUser.email)\n    ) {\n      this.questions[i].rate--;\n      this.questions[i].voters.up = this.questions[i].voters.up.filter(\n        (x) => {\n          return x !== this.currUser.email;\n        }\n      );\n      this.sortQuestions();\n      this.saveQuestions();\n      return;\n    }\n    // Otherwise\n    if (\n      // If you vote up, but you VOTED DOWN before then remove that 1 downvote\n      this.questions[i].voters.down &&\n      this.questions[i].voters.down.includes(this.currUser.email)\n    ) {\n      this.questions[i].rate++;\n      this.questions[i].voters.down = this.questions[i].voters.down.filter(\n        (x) => {\n          return x !== this.currUser.email;\n        }\n      );\n    }\n    // Now include your upvote\n    this.questions[i].rate++;\n    if (!this.questions[i].voters.up) {\n      this.questions[i].voters.up = new Array();\n    }\n    this.questions[i].voters.up.push(this.currUser.email);\n    // Save changes for two *Otherwise\n    this.sortQuestions();\n    this.saveQuestions();\n  }\n\n  downvote(i: number) {\n    this.initVoters(i);\n    if (\n      // If you already voted down then you want to remove your vote... Okay\n      this.questions[i].voters.down &&\n      this.questions[i].voters.down.includes(this.currUser.email)\n    ) {\n      this.questions[i].rate++;\n      this.questions[i].voters.down = this.questions[i].voters.down.filter(\n        (x) => {\n          return x !== this.currUser.email;\n        }\n      );\n      this.sortQuestions();\n      this.saveQuestions();\n      return;\n    }\n    // Otherwise\n    if (\n      // If you vote down, but you VOTED UP before then remove that 1 upvote\n      this.questions[i].voters.up &&\n      this.questions[i].voters.up.includes(this.currUser.email)\n    ) {\n      this.questions[i].rate--;\n      this.questions[i].voters.up = this.questions[i].voters.up.filter(\n        (x) => {\n          return x !== this.currUser.email;\n        }\n      );\n    }\n    // Now include your upvote\n    this.questions[i].rate--;\n    if (!this.questions[i].voters.down) {\n      this.questions[i].voters.down = new Array();\n    }\n    this.questions[i].voters.down.push(this.currUser.email);\n    // Save changes for two *Otherwise\n    this.sortQuestions();\n    this.saveQuestions();\n  }\n  \n  initVoters(i: number) {\n    if(!this.questions[i].voters) {\n      this.questions[i].voters = {\n        up: new Array(),\n        down: new Array()\n      };\n    }\n  }\n\n  sortQuestions() {\n    this.questions.sort((a, b) => (a.rate > b.rate ? -1 : 1));\n  }\n\n  saveQuestions() {\n    this.dataStorage.uQuestions.next(this.questions);\n    this.dataStorage.saveQuestions();\n  }\n\n  onRating(i: number) {\n    let email = this.currUser.email;\n    email = email.replace('.', '-')\n    if(this.rating.users[email]) {\n      this.rating.sum -= this.rating.users[email]\n      this.rating.votes--;\n    }\n    this.rating.sum += i;\n    this.rating.votes++;\n    this.rating.users[email] = i;\n    this.dataStorage.saveRating(this.rating);\n  }\n\n  ngOnDestroy() {\n    this.userSubscription.unsubscribe();\n  }\n}\n","<div class=\"page-content\">\n  <div class=\"text\">\n    <h1>Questions & Answers</h1>\n    <p>\n      Here, on this page, you can find answers to some questions. You can ask\n      your question absolutely anonymously, but also read the current unanswered\n      questions, so you can upvote some of them to be brought to the top of the\n      list, because we will answer questions with more votes faster.\n    </p>\n  </div>\n  <div class=\"text\">\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          <strong>Ask your question</strong>\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n\n      <form\n        autocomplete=\"off\"\n        #authForm=\"ngForm\"\n        (ngSubmit)=\"onSubmitForm(authForm)\"\n        *ngIf=\"!isLoading\"\n      >\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Subject:</mat-label>\n          <input\n            matInput\n            type=\"text\"\n            ngModel\n            placeholder=\"Smart Contract\"\n            minlength=\"4\"\n            name=\"subject\"\n          />\n        </mat-form-field>\n        <mat-form-field class=\"example-full-width\">\n          <mat-label>Question content:</mat-label>\n          <textarea\n            matInput\n            rows=\"5\"\n            minlength=\"10\"\n            ngModel\n            placeholder=\"I have heard that smart contracts can be written in two ways. What are those ways?\"\n            name=\"content\"\n          ></textarea>\n        </mat-form-field>\n        <br />\n        <button mat-raised-button type=\"submit\">Ask</button>\n      </form>\n    </mat-expansion-panel>\n  </div>\n\n  <div class=\"text\">\n    <h1>Answered questions</h1>\n    <div *ngIf=\"!answeredQuestions\">\n      <br />\n      <i><p>There is no answered questions yet...</p></i>\n    </div>\n    <div class=\"question\" *ngFor=\"let question of answeredQuestions\">\n      <h3>{{ question.question.subject }}</h3>\n      <p>Q: {{ question.question.content }}</p>\n      <p>A: {{ question.answer }}</p>\n    </div>\n  </div>\n\n  <div class=\"text\">\n    <h1>Unanswered questions</h1>\n    <div *ngIf=\"!questions\">\n      <br />\n      <i><p>There is no unanswered questions yet...</p></i>\n    </div>\n    <div class=\"question\" *ngFor=\"let question of questions; let i = index\">\n      <h3>\n        {{ question.subject }} <small>Rate: {{ question.rate }}</small>\n      </h3>\n      <div class=\"content\">\n        <p>{{ question.content }}</p>\n        <div class=\"vote\">\n          <mat-icon matTooltip=\"Upvote this question\" (click)=\"upvote(i)\"\n            >keyboard_arrow_up</mat-icon\n          >\n          <mat-icon matTooltip=\"Downvote\" (click)=\"downvote(i)\"\n            >keyboard_arrow_down</mat-icon\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"text\">\n    <h3>Rate our work, initiative, and effort...</h3>\n    <div>\n      <!-- RATE -->\n      <section id=\"rate\" class=\"rating\">\n        <!-- FIFTH STAR -->\n        <input\n          type=\"radio\"\n          id=\"star_5\"\n          name=\"rate\"\n          value=\"5\"\n          (click)=\"onRating(5)\"\n        />\n        <label for=\"star_5\" title=\"Five\">&#9733;</label>\n        <!-- FOURTH STAR -->\n        <input\n          type=\"radio\"\n          id=\"star_4\"\n          name=\"rate\"\n          value=\"4\"\n          (click)=\"onRating(4)\"\n        />\n        <label for=\"star_4\" title=\"Four\">&#9733;</label>\n        <!-- THIRD STAR -->\n        <input\n          type=\"radio\"\n          id=\"star_3\"\n          name=\"rate\"\n          value=\"3\"\n          (click)=\"onRating(3)\"\n        />\n        <label for=\"star_3\" title=\"Three\">&#9733;</label>\n        <!-- SECOND STAR -->\n        <input\n          type=\"radio\"\n          id=\"star_2\"\n          name=\"rate\"\n          value=\"2\"\n          (click)=\"onRating(2)\"\n        />\n        <label for=\"star_2\" title=\"Two\">&#9733;</label>\n        <!-- FIRST STAR -->\n        <input\n          type=\"radio\"\n          id=\"star_1\"\n          name=\"rate\"\n          value=\"1\"\n          (click)=\"onRating(1)\"\n        />\n        <label for=\"star_1\" title=\"One\">&#9733;</label>\n      </section>\n    </div>\n    <p>\n      Current average rate:\n      {{ rating ? (rating.sum / rating.votes | number: \"1.1-1\") : \"...\" }}\n    </p>\n  </div>\n</div>\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { tap, map, take, exhaustMap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from '../pages/auth/auth.service';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { User } from '../pages/auth/user.module';\nimport { SelectMultipleControlValueAccessor } from '@angular/forms';\n\n@Injectable({ providedIn: 'root' })\nexport class DataStorageService {\n  private ROOT_URL: string = 'https://test-38ac4.firebaseio.com';\n  public uQuestions = new BehaviorSubject<any>(null);\n  // public rating = new BehaviorSubject<any>(null);\n\n  constructor(private http: HttpClient, private authService: AuthService) {}\n\n  fetchRating() {\n    return this.http.get<{sum: number, votes: number, users: {}}>(this.ROOT_URL + '/rating.json');\n  }\n  \n  saveRating(data: any) {\n    this.http.put(this.ROOT_URL + '/rating.json', data).subscribe();\n  }\n\n  fetchGlossary() {\n    return this.http.get<{therm: string, definition: string}[]>(this.ROOT_URL + '/glossary.json');\n  }\n\n  fetchQuestions() {\n    this.http\n      .get(this.ROOT_URL + '/questions.json')\n      .pipe(\n        map((res) => {\n          return Object.keys(res).map((key) => {\n            return res[key];\n          });\n        })\n      )\n      .subscribe((res) => {\n        res.sort((a, b) => (a.rate > b.rate ? -1 : 1));\n        this.uQuestions.next(res);\n      });\n  }\n\n  fetchAnsweredQuestions() {\n    return this.http.get(this.ROOT_URL + '/QnA.json').pipe(\n      map((res) => {\n        return Object.keys(res).map((key) => {\n          return res[key];\n        });\n      })\n    );\n  }\n\n  saveQuestions() {\n    let data;\n    this.uQuestions\n      .pipe(\n        take(1),\n        map((x) => {\n          x.forEach((element) => {\n            if (!element.timestamp) {\n              console.log('New Question Added To DB');\n              setTimeout(() => {\n                element.timestamp = new Date().getTime();\n              }, 10);\n            }\n          });\n          return x;\n        })\n      )\n      .subscribe((r) => {\n        data = JSON.stringify(r);\n        // this.fetchVotes();\n      });\n\n    this.http.put(this.ROOT_URL + '/questions.json', data).subscribe();\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-loading-spinner',\n    template: '<div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>',\n    styleUrls: ['./loading-spinner.component.css']\n})\nexport class LoadingSpinnerComponent {\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}